/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoaplicada3;

import java.awt.BorderLayout;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;

/**
 *
 * @author Mariano
 */
public class Inicio extends javax.swing.JFrame {

    String funcion = "";
    double errorPermitido = 0;
    double inferior = 0;
    double superior = 0;
    double valorR;
    double valorFAxFR;
    double valorTotalFA = 0;
    double valorTotalFR = 0;
    public String[] nombresColumnas;
    public Object[][] datosFila;
    public Inicio() {
        initComponents();//Iniciamos los componentes del Frame
        this.setLocationRelativeTo(null);//Centramos nuestro frame

        setTitle("Metodo de Biseccion");

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane6 = new javax.swing.JTabbedPane();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        biseccionTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        BenviarButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        BerrorText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        BinferiorText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        BsuperiorText = new javax.swing.JTextField();
        BlimpiarButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        formulaErrorVerdadero = new javax.swing.JLabel();
        formulaErrorAbsoluto1 = new javax.swing.JLabel();
        jDesktopPane3 = new javax.swing.JDesktopPane();
        jDesktopPane4 = new javax.swing.JDesktopPane();
        jDesktopPane5 = new javax.swing.JDesktopPane();
        jDesktopPane6 = new javax.swing.JDesktopPane();
        jDesktopPane7 = new javax.swing.JDesktopPane();
        SalirDelSistema = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jDesktopPane2.setBackground(new java.awt.Color(51, 255, 255));
        jDesktopPane2.setForeground(new java.awt.Color(255, 255, 255));
        jDesktopPane2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        biseccionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(biseccionTable);

        jDesktopPane2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(449, 46, 760, 270));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        BenviarButton.setText("Ingresar Funcion");
        BenviarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BenviarButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Ingrese los siguientes datos");

        jLabel3.setText("Error absoluto permitido:");

        BerrorText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BerrorTextKeyTyped(evt);
            }
        });

        jLabel4.setText("Limite Inferior:");

        BinferiorText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BinferiorTextActionPerformed(evt);
            }
        });
        BinferiorText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BinferiorTextKeyTyped(evt);
            }
        });

        jLabel5.setText("Limite Superior:");

        BsuperiorText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BsuperiorTextKeyTyped(evt);
            }
        });

        BlimpiarButton.setText("LIMPIAR");
        BlimpiarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlimpiarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(BenviarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BlimpiarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BerrorText)
                            .addComponent(BinferiorText)
                            .addComponent(BsuperiorText, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(BerrorText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(BinferiorText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(BsuperiorText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BenviarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BlimpiarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(140, 140, 140))
        );

        jDesktopPane2.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(54, 46, 377, -1));
        jDesktopPane2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(324, 498, -1, -1));

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 324, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        jDesktopPane2.add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(54, 558, -1, -1));

        formulaErrorVerdadero.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/2.jpeg"))); // NOI18N
        jDesktopPane2.add(formulaErrorVerdadero, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 500, 400, -1));

        formulaErrorAbsoluto1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/1.jpeg"))); // NOI18N
        jDesktopPane2.add(formulaErrorAbsoluto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 450, 300, 50));

        jTabbedPane6.addTab("Método de Bisección", jDesktopPane2);

        jDesktopPane3.setBackground(new java.awt.Color(51, 255, 255));

        javax.swing.GroupLayout jDesktopPane3Layout = new javax.swing.GroupLayout(jDesktopPane3);
        jDesktopPane3.setLayout(jDesktopPane3Layout);
        jDesktopPane3Layout.setHorizontalGroup(
            jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1212, Short.MAX_VALUE)
        );
        jDesktopPane3Layout.setVerticalGroup(
            jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 534, Short.MAX_VALUE)
        );

        jTabbedPane6.addTab("Método de Recta Secante", jDesktopPane3);

        jDesktopPane4.setBackground(new java.awt.Color(51, 255, 255));

        javax.swing.GroupLayout jDesktopPane4Layout = new javax.swing.GroupLayout(jDesktopPane4);
        jDesktopPane4.setLayout(jDesktopPane4Layout);
        jDesktopPane4Layout.setHorizontalGroup(
            jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1215, Short.MAX_VALUE)
        );
        jDesktopPane4Layout.setVerticalGroup(
            jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 538, Short.MAX_VALUE)
        );

        jTabbedPane6.addTab("Método de Falsa Posición", jDesktopPane4);

        jDesktopPane5.setBackground(new java.awt.Color(51, 255, 255));

        javax.swing.GroupLayout jDesktopPane5Layout = new javax.swing.GroupLayout(jDesktopPane5);
        jDesktopPane5.setLayout(jDesktopPane5Layout);
        jDesktopPane5Layout.setHorizontalGroup(
            jDesktopPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1215, Short.MAX_VALUE)
        );
        jDesktopPane5Layout.setVerticalGroup(
            jDesktopPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 538, Short.MAX_VALUE)
        );

        jTabbedPane6.addTab("Método de Punto Fijo", jDesktopPane5);

        jDesktopPane6.setBackground(new java.awt.Color(51, 255, 255));

        javax.swing.GroupLayout jDesktopPane6Layout = new javax.swing.GroupLayout(jDesktopPane6);
        jDesktopPane6.setLayout(jDesktopPane6Layout);
        jDesktopPane6Layout.setHorizontalGroup(
            jDesktopPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1215, Short.MAX_VALUE)
        );
        jDesktopPane6Layout.setVerticalGroup(
            jDesktopPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 538, Short.MAX_VALUE)
        );

        jTabbedPane6.addTab("Método de Newton-Raphson", jDesktopPane6);

        jDesktopPane7.setBackground(new java.awt.Color(51, 255, 255));

        javax.swing.GroupLayout jDesktopPane7Layout = new javax.swing.GroupLayout(jDesktopPane7);
        jDesktopPane7.setLayout(jDesktopPane7Layout);
        jDesktopPane7Layout.setHorizontalGroup(
            jDesktopPane7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1215, Short.MAX_VALUE)
        );
        jDesktopPane7Layout.setVerticalGroup(
            jDesktopPane7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 538, Short.MAX_VALUE)
        );

        jTabbedPane6.addTab("Método de Müller", jDesktopPane7);

        SalirDelSistema.setBackground(new java.awt.Color(255, 0, 0));
        SalirDelSistema.setFont(new java.awt.Font("Engravers MT", 1, 14)); // NOI18N
        SalirDelSistema.setForeground(new java.awt.Color(0, 0, 0));
        SalirDelSistema.setText("Salir");
        SalirDelSistema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirDelSistemaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jTabbedPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1217, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(536, 536, 536)
                        .addComponent(SalirDelSistema, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SalirDelSistema, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BenviarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BenviarButtonActionPerformed
        double resultadoValorConX = 0;
        double resultadoValorExponente = 0;
        double funcionFA;
        double funcionFR;
        double valorR = 0;
        double valorFAxFR = 0;
        double valorTotalFA = 0;
        double valorTotalFR = 0;
        double errorAbsoluto=0;
        double valorAlmacenableR=0;
        int almacenarEXP=0;
        int iteraciones=0;
        double almacenarResulX[]=new double[100];
        double almacenarExponente[] = new double[100];
        String valorPrueba = "";
        int indicador = 1;
        String errorRestriccion =BerrorText.getText();
        String inferiorRestriccion=BinferiorText.getText();
        String superiorRestriccion=BsuperiorText.getText();
        if(errorRestriccion.isEmpty()||inferiorRestriccion.isEmpty()||superiorRestriccion.isEmpty()){
            JOptionPane.showMessageDialog(null, "No dejes casillas vacias");//Mensaje casilla vacia
        }else{
            iteraciones= Integer.parseInt(BerrorText.getText());
            inferior = Double.parseDouble(BinferiorText.getText());
            superior = Double.parseDouble(BsuperiorText.getText());
            valorR=(inferior+superior)/2;
            try{
                indicador=Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa 1 si quieres añadir un valor y 2 si quieres dejar de ingresar", valorPrueba));
                try{
                    while(indicador==1){
                        resultadoValorExponente=Double.parseDouble(JOptionPane.showInputDialog(null, "Ingresa el exponente que tiene tu x", valorPrueba));   
                        funcionFA=Math.pow(inferior, resultadoValorExponente);
                        funcionFR=Math.pow(valorR, resultadoValorExponente);
                        resultadoValorConX=Double.parseDouble(JOptionPane.showInputDialog(null, "Ingresa el valor de la constante que acompaña a la X", valorPrueba));           
                        indicador=Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa 1 si quieres añadir un valor y 2 si quieres dejar de ingresar", valorPrueba));
                        valorTotalFA=valorTotalFA+resultadoValorConX*(funcionFA);
                        valorTotalFR=valorTotalFR+resultadoValorConX*(funcionFR);
                        almacenarExponente[almacenarEXP]=resultadoValorExponente;
                        almacenarResulX[almacenarEXP]=resultadoValorConX;
                        almacenarEXP++;
                    }
                    if (indicador==2){     
                        JOptionPane.showMessageDialog(null, "Funcion grabada");
                        
                        valorFAxFR=valorTotalFA*valorTotalFR;
                        System.out.println("Iteracion: 1"+
                                            "\nXa: "+inferior+
                                            "\n Xb: "+superior+
                                            "\n Xr: "+valorR+
                                            "\n f(a): "+valorTotalFA+
                                            "\n f(r): "+valorTotalFR+
                                            "\n f(a)*f(r): "+valorFAxFR);
                        for (int i = 2; i <= iteraciones; i++) {
                            if(valorFAxFR<0){
                                valorTotalFA=0;
                                valorTotalFR=0;
                                superior=valorR;
                                valorAlmacenableR=valorR;
                                valorR=(inferior+superior)/2;
                                for (int j = 0; j < almacenarEXP; j++) {
                                    funcionFA=Math.pow(inferior, almacenarExponente[j]);
                                    funcionFR=Math.pow(valorR, almacenarExponente[j]);
                                    valorTotalFA=valorTotalFA+almacenarResulX[j]*(funcionFA);
                                    valorTotalFR=valorTotalFR+almacenarResulX[j]*(funcionFR);
                                }
                                valorFAxFR=valorTotalFA*valorTotalFR;
                                errorAbsoluto=Math.abs((valorR-valorAlmacenableR)/valorR)*100;
                                System.out.println("Iteracion: "+i+
                                            "\nXa: "+inferior+
                                            "\n Xb: "+superior+
                                            "\n Xr: "+valorR+
                                            "\n f(a): "+valorTotalFA+
                                            "\n f(r): "+valorTotalFR+
                                            "\n f(a)*f(r): "+valorFAxFR+
                                            "\n Ea% "+errorAbsoluto);  
                                System.out.println("es negativo izquierdo Xb=Xr\n");
                            }
                            else{
                                valorTotalFA=0;
                                valorTotalFR=0;
                                inferior=valorR;
                                valorAlmacenableR=valorR;
                                valorR=(inferior+superior)/2;
                                for (int j = 0; j < almacenarEXP; j++) {
                                    funcionFA=Math.pow(inferior, almacenarExponente[j]);
                                    funcionFR=Math.pow(valorR, almacenarExponente[j]);
                                    valorTotalFA=valorTotalFA+almacenarResulX[j]*(funcionFA);
                                    valorTotalFR=valorTotalFR+almacenarResulX[j]*(funcionFR);
                                }
                                valorFAxFR=valorTotalFA*valorTotalFR;
                                errorAbsoluto=Math.abs((valorR-valorAlmacenableR)/valorR)*100;
                                System.out.println("Iteracion: "+i+
                                            "\nXa: "+inferior+
                                            "\n Xb: "+superior+
                                            "\n Xr: "+valorR+
                                            "\n f(a): "+valorTotalFA+
                                            "\n f(r): "+valorTotalFR+
                                            "\n f(a)*f(r): "+valorFAxFR+
                                            "\n Ea% "+errorAbsoluto);
                                System.out.println("es positivo derecho Xa=Xr\n");
                            }
                        }
                        
                    }
                    if (indicador!=2&indicador!=1){
                        JOptionPane.showMessageDialog(null, "Error escribe valor válido");
                        indicador=Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa 1 si quieres añadir un valor y 2 si quieres dejar de ingresar", valorPrueba));
                    }
                }catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Error escribe valor válido");
                    indicador=Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa 1 si quieres añadir un valor y 2 si quieres dejar de ingresar", valorPrueba));
                }
                                                  
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Error escribe valor válido");
                indicador=Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa 1 si quieres añadir un valor y 2 si quieres dejar de ingresar", valorPrueba));
            }
            
        }
         String[] nombresColumnas = {"Iteraciones", "xa", "xb", "xr", "f(a)", "f(r)", "f(a)f(r)", "Ea(%)", "Et(%)"};
         Object[][] datosFila = {
            {1, superior, inferior, valorR, valorTotalFA, valorTotalFR, valorFAxFR}

        };
         JTable tabla=new JTable(datosFila, nombresColumnas);
         tabla=biseccionTable;
        add(new JScrollPane(tabla), BorderLayout.CENTER);
        
    }//GEN-LAST:event_BenviarButtonActionPerformed

    private void SalirDelSistemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirDelSistemaActionPerformed
        JOptionPane.showMessageDialog(null, "Vuelve pronto, que tengas buen dia");
        System.exit(0);
    }//GEN-LAST:event_SalirDelSistemaActionPerformed

    private void BlimpiarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlimpiarButtonActionPerformed
        BerrorText.setText("");
        BinferiorText.setText("");
        BsuperiorText.setText("");
    }//GEN-LAST:event_BlimpiarButtonActionPerformed

    private void BerrorTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BerrorTextKeyTyped
        //Combinacion de que la tecla se presione y se suelte
        char comprobarSiEsLetra = evt.getKeyChar();//Creamos variable tipo caracter para que no pueda escribir letras
        if(Character.isLetter(comprobarSiEsLetra)){//Comprobamos si el usuario escribe letras
            evt.consume();//el evento no permite seguir escribiendo
            Toolkit.getDefaultToolkit().beep();//sonido de error
            JOptionPane.showMessageDialog(null, "No puedes escribir letras, unicamente digitos");//Mensaje condicional no escribir letras
        }
    }//GEN-LAST:event_BerrorTextKeyTyped

    private void BinferiorTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BinferiorTextKeyTyped
        //Combinacion de que la tecla se presione y se suelte
        char comprobarSiEsLetra = evt.getKeyChar();//Creamos variable tipo caracter para que no pueda escribir letras
        if(Character.isLetter(comprobarSiEsLetra)){//Comprobamos si el usuario escribe letras
            evt.consume();//el evento no permite seguir escribiendo
            Toolkit.getDefaultToolkit().beep();//sonido de error
            JOptionPane.showMessageDialog(null, "No puedes escribir letras, unicamente digitos");//Mensaje condicional no escribir letras
        }
    }//GEN-LAST:event_BinferiorTextKeyTyped

    private void BsuperiorTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BsuperiorTextKeyTyped
        //Combinacion de que la tecla se presione y se suelte
        char comprobarSiEsLetra = evt.getKeyChar();//Creamos variable tipo caracter para que no pueda escribir letras
        if(Character.isLetter(comprobarSiEsLetra)){//Comprobamos si el usuario escribe letras
            evt.consume();//el evento no permite seguir escribiendo
            Toolkit.getDefaultToolkit().beep();//sonido de error
            JOptionPane.showMessageDialog(null, "No puedes escribir letras, unicamente digitos");//Mensaje condicional no escribir letras
        }
    }//GEN-LAST:event_BsuperiorTextKeyTyped

    private void BinferiorTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BinferiorTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BinferiorTextActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BenviarButton;
    private javax.swing.JTextField BerrorText;
    private javax.swing.JTextField BinferiorText;
    private javax.swing.JButton BlimpiarButton;
    private javax.swing.JTextField BsuperiorText;
    private javax.swing.JButton SalirDelSistema;
    private javax.swing.JTable biseccionTable;
    private javax.swing.JLabel formulaErrorAbsoluto1;
    private javax.swing.JLabel formulaErrorVerdadero;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JDesktopPane jDesktopPane3;
    private javax.swing.JDesktopPane jDesktopPane4;
    private javax.swing.JDesktopPane jDesktopPane5;
    private javax.swing.JDesktopPane jDesktopPane6;
    private javax.swing.JDesktopPane jDesktopPane7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane6;
    // End of variables declaration//GEN-END:variables

}
